Server Component :

    Core Feature : It's a read storage, stores the  data to optimize get requests (e.g #random ) and updates it with live data in time intervals

    Types : Depending on which content is flushed out of the cached system in time intervals
            1)Least recently used (LRU) - Keep the count of how frequent each item is requested and delete the one least recently used.
            2)Random Replacement (RR) – Just randomly delete an entry.
            3)Least frequently used (LFU) – Keep the count of how frequent each item is requested and delete the one least frequently used.
            4)W-TinyLFU - Addon for LFU, calculates frequency within a time window plus has various storage optimizations.

    Data Storage :
        Using HashTable
        Issues : If in-memory ,huge data , scalability issues
        Solutions : Compress data or splitting it across disks using say Sharding

    Testing :
        System Availability
        Replication vs Sharding
        Consistency
        Read throughput

http://blog.gainlo.co/index.php/2016/05/17/design-a-cache-system/